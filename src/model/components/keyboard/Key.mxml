<?xml version="1.0" encoding="utf-8"?>
<s:Group xmlns:fx="http://ns.adobe.com/mxml/2009"
		 xmlns:s="library://ns.adobe.com/flex/spark" 
		 currentState="normal"
		 click="clickHandler(event)"
		 touchBegin="touchBeginHandler(event)"
		 touchEnd="touchEndHandler(event)"
		 touchOut="touchOutHandler(event)"
		 width="80" 
		 height="80">
	
	<fx:Metadata>
		[Event(name="keyPressed", type="model.events.KeyEvent")]
	</fx:Metadata>
	
	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
	</fx:Declarations>
	
	<s:states>
		<s:State name="normal" />
		<s:State name="clicked" />
	</s:states>
	
	<s:Rect width="100%" 
			height="100%"
			radiusX="10"
			radiusY="10">
		<s:stroke>
			<s:SolidColorStroke pixelHinting="true" 
								color="{styleManager.getStyleDeclaration('spark.components.Label').getStyle('color')}"/>
		</s:stroke>
		<s:fill>
			<s:SolidColor alpha="0"
						  alpha.clicked="1"
						  color.clicked="{styleManager.getStyleDeclaration('spark.components.Label').getStyle('color')}" />
		</s:fill>
	</s:Rect>
	
	<s:VGroup width="100%" height="100%" horizontalAlign="center" verticalAlign="middle" >
		<s:Label text="{key}" 
				 paddingTop="5" 
				 fontSize="50" 
				 color.clicked="white" />
	</s:VGroup>
	
	<fx:Script>
		<![CDATA[
			import model.Settings;
			import model.events.KeyEvent;
			
			[Bindable]
			public var key :String;
			
			protected function touchBeginHandler(event:Event):void
			{
				setCurrentState("clicked");
			}
			
			protected function touchEndHandler(event:Event):void
			{
				setCurrentState("normal");
				
				dispatchEvent(new KeyEvent(KeyEvent.KEY_PRESSED, key));
			}
			
			protected function touchOutHandler(event:TouchEvent):void
			{
				setCurrentState("normal");
			}
			
			protected function clickHandler(event:MouseEvent):void
			{
				if (!Settings.simulator)
					return;
				
				setCurrentState("clicked");
				dispatchEvent(new KeyEvent(KeyEvent.KEY_PRESSED, key));
			}
			
		]]>
	</fx:Script>
</s:Group>
